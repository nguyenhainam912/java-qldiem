/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlhotel;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TGDD
 */
public class MENU extends javax.swing.JFrame {

    /**
     * Creates new form MENU
     */
    public MENU() {
        initComponents();
    }
    private Connection getConnect() {
        try {
        // Thay đổi thông tin kết nối theo cấu hình của bạn
        String url = "jdbc:sqlserver://DESKTOP-D7RU51P\\SQLEXPRESS;databaseName=QLDiem;integratedSecurity=true;encrypt=false";
        String user = "sa";
        String password = "123456";

        // Tạo kết nối
        Connection connection = DriverManager.getConnection(url, user, password);

        System.out.println("Kết nối thành công đến cơ sở dữ liệu!");
        return connection;
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        return null;
    }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        SildeMenu = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        SinhVien = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        txtMASV = new javax.swing.JTextField();
        txtHtSV = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        cbGT = new javax.swing.JComboBox<>();
        jLabel61 = new javax.swing.JLabel();
        txtSNSV = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        txtDCSV = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbSinhVien = new javax.swing.JTable();
        jLabel59 = new javax.swing.JLabel();
        btnAddSV = new javax.swing.JButton();
        btnSuaSV = new javax.swing.JButton();
        btnLuuSV = new javax.swing.JButton();
        btNXoaSV = new javax.swing.JButton();
        TrangChu = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Mon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaMon = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTenMon = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMon = new javax.swing.JTable();
        btnAddMon = new javax.swing.JButton();
        btnSuaMon = new javax.swing.JButton();
        btnLuuMon = new javax.swing.JButton();
        Diem = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDiem = new javax.swing.JTable();
        txtNgayThi = new javax.swing.JTextField();
        TxtDiem = new javax.swing.JTextField();
        txtDMaSV = new javax.swing.JComboBox<>();
        txtHocKi = new javax.swing.JComboBox<>();
        txtDMaMon = new javax.swing.JComboBox<>();
        btnAddDiem = new javax.swing.JButton();
        btnSuaDiem = new javax.swing.JButton();
        btnLuuDiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(880, 750));

        pnMain.setBackground(new java.awt.Color(255, 255, 255));
        pnMain.setPreferredSize(new java.awt.Dimension(1400, 800));

        SildeMenu.setBackground(new java.awt.Color(230, 255, 255));
        SildeMenu.setAlignmentX(1.0F);
        SildeMenu.setAlignmentY(1.0F);
        SildeMenu.setAutoscrolls(true);

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setText("#NHN");

        jLabel27.setText("Trang Chủ");
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        jLabel28.setText("-------------------------------------");

        jLabel30.setText("----------------------------------------");

        jLabel31.setText("Điểm");
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        jLabel32.setText("Môn");
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });

        jLabel33.setText("Sinh Viên ");
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        jLabel34.setText("Trợ Giúp");

        jLabel35.setText("Đăng Xuất");

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\WorkSpace\\java\\nhmdung\\qlhotel - Copy\\src\\qlhotel\\logo (1).png")); // NOI18N
        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout SildeMenuLayout = new javax.swing.GroupLayout(SildeMenu);
        SildeMenu.setLayout(SildeMenuLayout);
        SildeMenuLayout.setHorizontalGroup(
            SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SildeMenuLayout.createSequentialGroup()
                .addGroup(SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel34))
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SildeMenuLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel24)
                        .addGroup(SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SildeMenuLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92))
                            .addGroup(SildeMenuLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(SildeMenuLayout.createSequentialGroup()
                .addGroup(SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel32))
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        SildeMenuLayout.setVerticalGroup(
            SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SildeMenuLayout.createSequentialGroup()
                .addGroup(SildeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SildeMenuLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SildeMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)))
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addGap(26, 26, 26)
                .addComponent(jLabel33)
                .addGap(29, 29, 29)
                .addComponent(jLabel32)
                .addGap(30, 30, 30)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addComponent(jLabel34)
                .addGap(38, 38, 38)
                .addComponent(jLabel35)
                .addGap(46, 46, 46))
        );

        jPanel3.setPreferredSize(new java.awt.Dimension(2000, 784));
        jPanel3.setLayout(new java.awt.CardLayout());

        SinhVien.setBackground(new java.awt.Color(240, 255, 255));
        SinhVien.setPreferredSize(new java.awt.Dimension(1200, 784));

        jLabel55.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel55.setText("Quản Lý Sinh Viên");

        jLabel56.setText("Mã SV");

        jLabel60.setText("Giới Tính");

        cbGT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        jLabel61.setText("Ngày Sinh");

        jLabel63.setText("Địa Chỉ");

        tbSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Họ Tên", "Giới Tính", "Địa Chỉ", "Ngày Sinh"
            }
        ));
        jScrollPane3.setViewportView(tbSinhVien);

        jLabel59.setText("Họ Tên");

        btnAddSV.setText("Tạo");
        btnAddSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSVActionPerformed(evt);
            }
        });

        btnSuaSV.setText("Sửa");
        btnSuaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSVActionPerformed(evt);
            }
        });

        btnLuuSV.setText("Lưu");
        btnLuuSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuSVActionPerformed(evt);
            }
        });

        btNXoaSV.setText("Xóa");
        btNXoaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNXoaSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SinhVienLayout = new javax.swing.GroupLayout(SinhVien);
        SinhVien.setLayout(SinhVienLayout);
        SinhVienLayout.setHorizontalGroup(
            SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SinhVienLayout.createSequentialGroup()
                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SinhVienLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SinhVienLayout.createSequentialGroup()
                                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel60)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMASV, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(SinhVienLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel61)
                                .addGap(18, 18, 18)
                                .addComponent(txtSNSV, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SinhVienLayout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jLabel64))
                            .addGroup(SinhVienLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(39, 39, 39)
                        .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDCSV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(txtHtSV)))
                    .addGroup(SinhVienLayout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(jLabel55))
                    .addGroup(SinhVienLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SinhVienLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(btnAddSV)
                .addGap(53, 53, 53)
                .addComponent(btnSuaSV)
                .addGap(76, 76, 76)
                .addComponent(btnLuuSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btNXoaSV)
                .addGap(33, 33, 33))
        );
        SinhVienLayout.setVerticalGroup(
            SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SinhVienLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel55)
                .addGap(61, 61, 61)
                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(txtMASV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59)
                    .addComponent(txtHtSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(cbGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63)
                    .addComponent(txtDCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(txtSNSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addGroup(SinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSV)
                    .addComponent(btnSuaSV)
                    .addComponent(btnLuuSV)
                    .addComponent(btNXoaSV))
                .addGap(30, 30, 30))
        );

        jPanel3.add(SinhVien, "card5");

        TrangChu.setBackground(new java.awt.Color(240, 255, 255));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel38.setText("Trang Chủ");

        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\WorkSpace\\java\\nhmdung\\qlhotel - Copy\\src\\qlhotel\\truong-dai-hoc-kien-truc-ha-noi-2 (1).jpg")); // NOI18N

        javax.swing.GroupLayout TrangChuLayout = new javax.swing.GroupLayout(TrangChu);
        TrangChu.setLayout(TrangChuLayout);
        TrangChuLayout.setHorizontalGroup(
            TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrangChuLayout.createSequentialGroup()
                .addGroup(TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrangChuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(TrangChuLayout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(TrangChuLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(991, Short.MAX_VALUE))
        );
        TrangChuLayout.setVerticalGroup(
            TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrangChuLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel38)
                .addGap(18, 18, 18)
                .addComponent(jLabel40)
                .addGap(70, 70, 70)
                .addComponent(jLabel4)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jPanel3.add(TrangChu, "card2");

        Mon.setBackground(new java.awt.Color(240, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Quản Lý Môn ");

        jLabel5.setText("Mã Môn");

        jLabel6.setText("Tên Môn");

        tblMon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Môn", "Tên Môn"
            }
        ));
        jScrollPane1.setViewportView(tblMon);

        btnAddMon.setText("Tạo");
        btnAddMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMonActionPerformed(evt);
            }
        });

        btnSuaMon.setText("Sửa");
        btnSuaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaMonActionPerformed(evt);
            }
        });

        btnLuuMon.setText("Lưu");
        btnLuuMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuMonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MonLayout = new javax.swing.GroupLayout(Mon);
        Mon.setLayout(MonLayout);
        MonLayout.setHorizontalGroup(
            MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MonLayout.createSequentialGroup()
                .addGroup(MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MonLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MonLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MonLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(190, 190, 190)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MonLayout.createSequentialGroup()
                                .addComponent(btnAddMon)
                                .addGap(40, 40, 40)
                                .addComponent(btnSuaMon)
                                .addGap(39, 39, 39)
                                .addComponent(btnLuuMon)))))
                .addContainerGap(991, Short.MAX_VALUE))
        );
        MonLayout.setVerticalGroup(
            MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MonLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 340, Short.MAX_VALUE)
                .addGroup(MonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddMon)
                    .addComponent(btnSuaMon)
                    .addComponent(btnLuuMon))
                .addGap(55, 55, 55))
        );

        jPanel3.add(Mon, "card6");

        Diem.setBackground(new java.awt.Color(240, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Quản Lý Điểm");

        jLabel7.setText("Mã SV");

        jLabel8.setText("Mã Môn");

        jLabel9.setText("Ngày Thi");

        jLabel10.setText("Học Kì");

        jLabel11.setText("Điểm");

        tblDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Mã Môn", "Ngày Thi", "Điểm", "Học Kì"
            }
        ));
        jScrollPane2.setViewportView(tblDiem);

        txtNgayThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayThiActionPerformed(evt);
            }
        });

        TxtDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtDiemActionPerformed(evt);
            }
        });

        txtDMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDMaSVActionPerformed(evt);
            }
        });

        txtHocKi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        txtHocKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHocKiActionPerformed(evt);
            }
        });

        txtDMaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDMaMonActionPerformed(evt);
            }
        });

        btnAddDiem.setText("Tạo");
        btnAddDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDiemActionPerformed(evt);
            }
        });

        btnSuaDiem.setText("Sửa");
        btnSuaDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDiemActionPerformed(evt);
            }
        });

        btnLuuDiem.setText("Lưu");
        btnLuuDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DiemLayout = new javax.swing.GroupLayout(Diem);
        Diem.setLayout(DiemLayout);
        DiemLayout.setHorizontalGroup(
            DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DiemLayout.createSequentialGroup()
                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DiemLayout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DiemLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DiemLayout.createSequentialGroup()
                                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(DiemLayout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(txtDMaSV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(DiemLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(67, 67, 67)
                                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDMaMon, 0, 109, Short.MAX_VALUE)
                                    .addComponent(TxtDiem))
                                .addGap(90, 90, 90)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHocKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(DiemLayout.createSequentialGroup()
                                .addComponent(btnAddDiem)
                                .addGap(85, 85, 85)
                                .addComponent(btnSuaDiem)
                                .addGap(93, 93, 93)
                                .addComponent(btnLuuDiem)))))
                .addContainerGap(972, Short.MAX_VALUE))
        );
        DiemLayout.setVerticalGroup(
            DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DiemLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtDMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(txtNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtHocKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(DiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDiem)
                    .addComponent(btnLuuDiem)
                    .addComponent(btnSuaDiem))
                .addGap(37, 37, 37))
        );

        jPanel3.add(Diem, "card5");

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1765, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnMainLayout.createSequentialGroup()
                    .addComponent(SildeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 981, Short.MAX_VALUE)))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnMainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(SildeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        TrangChu.setVisible(true);
        SinhVien.setVisible(false);
        Mon.setVisible(false);
        Diem.setVisible(false);

        
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        TrangChu.setVisible(false);
        SinhVien.setVisible(true);
        Mon.setVisible(false);
        Diem.setVisible(false);
    }//GEN-LAST:event_jLabel33MouseClicked
    
    private void populateComboBoxMon() {
    try (Connection connection = getConnect()) {
        if (connection != null) {
            String query = "SELECT MaMon FROM Mon";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    String MaMon = resultSet.getString("MaMon");

                    txtDMaMon.addItem(MaMon); // Thêm mỗi mã phòng vào ComboBox

                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
private void populateComboBoxSV() {
    try (Connection connection = getConnect()) {
        if (connection != null) {
            String query = "SELECT MaSv FROM SinhVien";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    String MaSv = resultSet.getString("MaSv");

                    txtDMaSV.addItem(MaSv); // Thêm mỗi mã phòng vào ComboBox

                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    private void btnAddSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSVActionPerformed
        try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Lấy thông tin từ giao diện người dùng
            String cid = txtMASV.getText();
            String cname = txtHtSV.getText();
            String gender = (String) cbGT.getSelectedItem();
            String ngaysinhsv = txtSNSV.getText();
            String address = txtDCSV.getText();
            
            // Lấy roomid từ combobox
            //String  roomid = (String) cbMaP.getSelectedItem();
            

            // Chuẩn bị câu truy vấn SQL để thêm khách hàng
            String query = "INSERT INTO SinhVien (MaSv, HoTen, GioiTinh, NgaySinh, DiaChi) VALUES (?, ?, ?, ?,?)";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                // Thiết lập giá trị cho các tham số trong câu truy vấn
                preparedStatement.setString(1, cid);
                preparedStatement.setString(2, cname);
                preparedStatement.setString(3, gender);
                preparedStatement.setString(4, ngaysinhsv);
                preparedStatement.setString(5, address);

                // Thực hiện truy vấn thêm
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Thêm sinh vien thành công!");
                    updateTableSinhVien();
                } else {
                    System.out.println("Thêm sinh vien thất bại!");
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn thêm: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
    clearInputFields();
    }//GEN-LAST:event_btnAddSVActionPerformed
    
    public void updateTableSinhVien() {
    try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
            String query = "SELECT * FROM SinhVien";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                DefaultTableModel model = (DefaultTableModel) tbSinhVien.getModel();
                model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                while (resultSet.next()) {
                    String cid = resultSet.getString("MaSv");
                    String cname = resultSet.getString("HoTen");
                    String ngaysinh = resultSet.getString("NgaySinh");
                    String gioitinh = resultSet.getString("GioiTinh");
                    String diachi = resultSet.getString("DiaCHi");
                    

                    model.addRow(new Object[]{cid, cname, gioitinh, diachi, ngaysinh});
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    
    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        TrangChu.setVisible(false);
        SinhVien.setVisible(false);
        Mon.setVisible(true);
        Diem.setVisible(false);
    }//GEN-LAST:event_jLabel32MouseClicked

    private void btnSuaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSVActionPerformed
         int selectedRowIndex = tbSinhVien.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String cid = tbSinhVien.getValueAt(selectedRowIndex, 0).toString();
        String cname = tbSinhVien.getValueAt(selectedRowIndex, 1).toString();
        String gender = tbSinhVien.getValueAt(selectedRowIndex, 2).toString();
        String address = tbSinhVien.getValueAt(selectedRowIndex, 3).toString();
        String ngaysinh = tbSinhVien.getValueAt(selectedRowIndex, 4).toString();

        // Fill the input fields with the selected data
        txtMASV.setText(cid);
        txtHtSV.setText(cname);
        
        cbGT.setSelectedItem(gender);
        txtSNSV.setText(ngaysinh);
        txtDCSV.setText(address);
    } else {
        System.out.println("Vui lòng chọn một dòng để sửa!");
    }
    }//GEN-LAST:event_btnSuaSVActionPerformed

    private void btnLuuSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuSVActionPerformed
        int selectedRowIndex = tbSinhVien.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the input fields
        String cid = txtMASV.getText();
        String cname = txtHtSV.getText();
        
        String gender = (String) cbGT.getSelectedItem();
        String ngaysinhkh = txtSNSV.getText();
        String address = txtDCSV.getText();

        try (Connection connection = getConnect()) {
            // Kiểm tra nếu kết nối thành công
            if (connection != null) {
                // Chuẩn bị câu truy vấn SQL để cập nhật thông tin khách hàng
                String query = "UPDATE SinhVien SET HoTen = ?, GioiTinh = ?, DiaChi = ?, NgaySinh = ? Where MaSV = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Thiết lập giá trị cho các tham số trong câu truy vấn
                    preparedStatement.setString(1, cname);
                    preparedStatement.setString(2, gender);
                    preparedStatement.setString(4, ngaysinhkh);
                    preparedStatement.setString(3, address);
                    preparedStatement.setString(5, cid);

                    // Thực hiện truy vấn cập nhật
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Cập nhật thông tin Sinh vien thành công!");
                        // Sau khi cập nhật thành công, cập nhật lại bảng
                        updateTableSinhVien();
                        // Xóa nội dung trong các trường nhập liệu sau khi lưu
                        clearInputFields();
                    } else {
                        System.out.println("Không tìm thấy khách hàng để cập nhật!");
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn cập nhật: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để cập nhật!");
    }
    }//GEN-LAST:event_btnLuuSVActionPerformed

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
        TrangChu.setVisible(false);
        SinhVien.setVisible(false);
        Mon.setVisible(false);
        Diem.setVisible(true);
        this.populateComboBoxSV();
        this.populateComboBoxMon();
    }//GEN-LAST:event_jLabel31MouseClicked

    private void btnAddMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMonActionPerformed
        // TODO add your handling code here:
        try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Lấy thông tin từ giao diện người dùng
            String maMon = txtMaMon.getText();
            String tenMon = txtTenMon.getText();

            // Chuẩn bị câu truy vấn SQL để thêm khách hàng
            String query = "INSERT INTO Mon (MaMon, TenMon) VALUES (?, ?)";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                // Thiết lập giá trị cho các tham số trong câu truy vấn
                preparedStatement.setString(1, maMon);
                preparedStatement.setString(2, tenMon);

                // Thực hiện truy vấn thêm
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Thêm sinh vien thành công!");
                    updateTableMon();
                } else {
                    System.out.println("Thêm sinh vien thất bại!");
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn thêm: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
    clearInputFields();
    }//GEN-LAST:event_btnAddMonActionPerformed

    private void txtNgayThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayThiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayThiActionPerformed

    private void TxtDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtDiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtDiemActionPerformed

    private void txtDMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDMaSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDMaSVActionPerformed

    private void txtHocKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHocKiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHocKiActionPerformed

    private void txtDMaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDMaMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDMaMonActionPerformed

    private void btnSuaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaMonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMon.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String maMon = tblMon.getValueAt(selectedRowIndex, 0).toString();
        String tenMon = tblMon.getValueAt(selectedRowIndex, 1).toString();
        

        // Fill the input fields with the selected data
        txtMaMon.setText(maMon);
        txtTenMon.setText(tenMon);
        
        
    } else {
        System.out.println("Vui lòng chọn một dòng để sửa!");
    }
    }//GEN-LAST:event_btnSuaMonActionPerformed

    private void btnLuuMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuMonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMon.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the input fields
        String maMon = txtMaMon.getText();
        String tenMon = txtTenMon.getText();

        try (Connection connection = getConnect()) {
            // Kiểm tra nếu kết nối thành công
            if (connection != null) {
                // Chuẩn bị câu truy vấn SQL để cập nhật thông tin khách hàng
                String query = "UPDATE Mon SET TenMon = ? Where MaMon = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Thiết lập giá trị cho các tham số trong câu truy vấn
                    preparedStatement.setString(1, tenMon);
                    preparedStatement.setString(2, maMon);
                    

                    // Thực hiện truy vấn cập nhật
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Cập nhật thông tin Sinh vien thành công!");
                        // Sau khi cập nhật thành công, cập nhật lại bảng
                        updateTableMon();
                        // Xóa nội dung trong các trường nhập liệu sau khi lưu
                        clearInputFields();
                    } else {
                        System.out.println("Không tìm thấy khách hàng để cập nhật!");
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn cập nhật: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để cập nhật!");
    }
    }//GEN-LAST:event_btnLuuMonActionPerformed

    private void btNXoaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNXoaSVActionPerformed
        // TODO add your handling code here:
                                                   
        int selectedRowIndex = tbSinhVien.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Lấy giá trị của cột CID từ dòng được chọn
        String cid = tbSinhVien.getValueAt(selectedRowIndex, 0).toString();

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xoa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection connection = getConnect()) {
                // Kiểm tra nếu kết nối thành công
                if (connection != null) {
                    // Chuẩn bị câu truy vấn SQL để xóa thông tin khách hàng
                    String query = "DELETE FROM SinhVien WHERE MaSv = ?";

                    try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                        // Thiết lập giá trị cho tham số trong câu truy vấn
                        preparedStatement.setString(1, cid);

                        // Thực hiện truy vấn xóa
                        int rowsAffected = preparedStatement.executeUpdate();

                        if (rowsAffected > 0) {
                            System.out.println("Xóa thông tin khách hàng thành công!");
                            // Sau khi xóa thành công, cập nhật lại bảng
                            updateTableSinhVien();
                            // Xóa nội dung trong các trường nhập liệu sau khi xóa
                            clearInputFields();
                        } else {
                            System.out.println("Không tìm thấy khách hàng để xóa!");
                        }
                    } catch (SQLException ex) {
                        System.err.println("Lỗi thực hiện truy vấn xóa: " + ex.getMessage());
                    }
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
            }
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để xóa!");
    }
    }//GEN-LAST:event_btNXoaSVActionPerformed

    private void btnSuaDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDiemActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDiem.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String maSV = tblDiem.getValueAt(selectedRowIndex, 0).toString();
        String maMon = tblDiem.getValueAt(selectedRowIndex, 1).toString();
        String ngayThi = tblDiem.getValueAt(selectedRowIndex, 2).toString();
        String diem = tblDiem.getValueAt(selectedRowIndex, 3).toString();
        String hocKi = tblDiem.getValueAt(selectedRowIndex, 4).toString();


        // Fill the input fields with the selected data
        txtDMaSV.setSelectedItem(maSV);
                txtDMaMon.setSelectedItem(maMon);

        txtNgayThi.setText(ngayThi);
                TxtDiem.setText(diem);
                               txtHocKi.setSelectedItem(hocKi);


        
        
        
    } else {
        System.out.println("Vui lòng chọn một dòng để sửa!");
    }
    }//GEN-LAST:event_btnSuaDiemActionPerformed

    private void btnAddDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDiemActionPerformed
        // TODO add your handling code here:
        try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Lấy thông tin từ giao diện người dùng
            String maMon = (String) txtDMaMon.getSelectedItem();
            String maSV = (String) txtDMaSV.getSelectedItem();

            String ngayThi = txtNgayThi.getText();
            String diem = TxtDiem.getText();
            String hocKi = (String) txtHocKi.getSelectedItem();


            // Chuẩn bị câu truy vấn SQL để thêm khách hàng
            String query = "INSERT INTO Diem (MaMon, MaSV, NgayThi,Diem,HocKi) VALUES (?, ?,?,?,?)";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                // Thiết lập giá trị cho các tham số trong câu truy vấn
                preparedStatement.setString(1, maMon);
                preparedStatement.setString(2, maSV);
                preparedStatement.setString(3, ngayThi);
                preparedStatement.setString(4, diem);
                preparedStatement.setString(5, hocKi);

                // Thực hiện truy vấn thêm
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Thêm sinh vien thành công!");
                    updateTableDiem();
                } else {
                    System.out.println("Thêm sinh vien thất bại!");
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn thêm: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
    clearInputFields();
    }//GEN-LAST:event_btnAddDiemActionPerformed

    private void btnLuuDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuDiemActionPerformed
        // TODO add your handling code here:
              int selectedRowIndex = tblDiem.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the input fields
        String maMon =(String) txtDMaMon.getSelectedItem();
                String maSv =(String) txtDMaSV.getSelectedItem();

        String ngayThi = txtNgayThi.getText();
                String diem = TxtDiem.getText();

                String hocKi =(String) txtHocKi.getSelectedItem();


        try (Connection connection = getConnect()) {
            // Kiểm tra nếu kết nối thành công
            if (connection != null) {
                // Chuẩn bị câu truy vấn SQL để cập nhật thông tin khách hàng
                String query = "UPDATE Diem SET HocKi = ?, NgayThi= ?, Diem= ? Where MaMon = ? and MaSV = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Thiết lập giá trị cho các tham số trong câu truy vấn
                    preparedStatement.setString(1, hocKi);
                    preparedStatement.setString(2, ngayThi);
                    preparedStatement.setString(3, diem);
                    preparedStatement.setString(4, maMon);
                    preparedStatement.setString(5, maSv);
                    

                    // Thực hiện truy vấn cập nhật
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Cập nhật thông tin Sinh vien thành công!");
                        // Sau khi cập nhật thành công, cập nhật lại bảng
                        updateTableDiem();
                        // Xóa nội dung trong các trường nhập liệu sau khi lưu
                        clearInputFields();
                    } else {
                        System.out.println("Không tìm thấy khách hàng để cập nhật!");
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn cập nhật: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để cập nhật!");
    }
    }//GEN-LAST:event_btnLuuDiemActionPerformed
    
    public void updateTableMon() {
    try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
            String query = "SELECT * FROM Mon";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                DefaultTableModel model = (DefaultTableModel) tblMon.getModel();
                model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                while (resultSet.next()) {
                    String maMon = resultSet.getString("MaMon");
                    String tenMon = resultSet.getString("TenMon");
                    
                    

                    model.addRow(new Object[]{maMon, tenMon});
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    
     public void updateTableDiem() {
    try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
            String query = "SELECT * FROM Diem";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                DefaultTableModel model = (DefaultTableModel) tblDiem.getModel();
                model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                while (resultSet.next()) {
                    String maSv = resultSet.getString("MaSv");
                    String maMon = resultSet.getString("MaMon");
                    String hocKi = resultSet.getString("HocKi");
                    String ngayThi = resultSet.getString("NgayThi");
                    String diem = resultSet.getString("Diem");

                    model.addRow(new Object[]{maSv, maMon,ngayThi,diem,hocKi});
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    
    
    
    private void clearInputFields() {
    // Xóa nội dung trong các trường nhập liệu

    txtMASV.setText("");
    txtHtSV.setText("");
    cbGT.setSelectedItem(0);
    txtSNSV.setText("");
    txtDCSV.setText("");
    
    txtMaMon.setText("");
    txtTenMon.setText("");
    
    txtDMaSV.setSelectedItem(0);
        txtDMaMon.setSelectedItem(0);
    txtNgayThi.setText("");
    TxtDiem.setText("");
    txtHocKi.setSelectedItem(0);

    
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MENU form = new MENU();
            
            // Gọi phương thức updateTable ngay sau khi khởi tạo
                //form.updateTable();
                form.updateTableMon();
                form.updateTableDiem();

                //form.updateTableKhachHang();
                form.populateComboBoxSV();
                form.populateComboBoxMon();

                form.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Diem;
    private javax.swing.JPanel Mon;
    private javax.swing.JPanel SildeMenu;
    private javax.swing.JPanel SinhVien;
    private javax.swing.JPanel TrangChu;
    private javax.swing.JTextField TxtDiem;
    private javax.swing.JButton btNXoaSV;
    private javax.swing.JButton btnAddDiem;
    private javax.swing.JButton btnAddMon;
    private javax.swing.JButton btnAddSV;
    private javax.swing.JButton btnLuuDiem;
    private javax.swing.JButton btnLuuMon;
    private javax.swing.JButton btnLuuSV;
    private javax.swing.JButton btnSuaDiem;
    private javax.swing.JButton btnSuaMon;
    private javax.swing.JButton btnSuaSV;
    private javax.swing.JComboBox<String> cbGT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnMain;
    private javax.swing.JTable tbSinhVien;
    private javax.swing.JTable tblDiem;
    private javax.swing.JTable tblMon;
    private javax.swing.JTextField txtDCSV;
    private javax.swing.JComboBox<String> txtDMaMon;
    private javax.swing.JComboBox<String> txtDMaSV;
    private javax.swing.JComboBox<String> txtHocKi;
    private javax.swing.JTextField txtHtSV;
    private javax.swing.JTextField txtMASV;
    private javax.swing.JTextField txtMaMon;
    private javax.swing.JTextField txtNgayThi;
    private javax.swing.JTextField txtSNSV;
    private javax.swing.JTextField txtTenMon;
    // End of variables declaration//GEN-END:variables
}
